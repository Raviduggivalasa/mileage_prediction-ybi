# -*- coding: utf-8 -*-
"""mileage_pred.ibpy

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1yM8vUZ2tjbs_iFkHjTZQjUsJvzCRwlTR

MILEAGE PREDICTION USING REGRESSION
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

mileage = pd.read_csv("https://raw.githubusercontent.com/YBI-Foundation/Dataset/main/MPG.csv")

mileage.head

mileage.nunique

mileage.info

mileage.describe

mileage = mileage.dropna()

mileage.info

mileage.columns

y = mileage['mpg']

y.shape

x = mileage[['cylinders', 'displacement', 'horsepower', 'weight',
       'acceleration',]]

x.shape

x

from sklearn.preprocessing import StandardScaler

model = StandardScaler()

x =model.fit_transform(x)

x

pd.DataFrame(x).describe

from sklearn.model_selection import train_test_split

x_train,x_test,y_train,y_test = train_test_split(x,y,random_state=2529)

x_train

from sklearn.linear_model import LinearRegression

lr = LinearRegression()

lr.fit(x_train,y_train)

y_pred  = lr.predict(x_test)

y_pred

from sklearn.metrics import mean_absolute_error,mean_absolute_percentage_error,r2_score

mean_absolute_error(y_test,y_pred)

mean_absolute_percentage_error(y_test,y_pred)

r2_score(y_test,y_pred)

from sklearn.preprocessing import PolynomialFeatures

poly = PolynomialFeatures(degree=2,interaction_only=True,include_bias=False)

x_train2 = poly.fit_transform(x_train)

x_test2 = poly.fit_transform(x_test)

lr.fit(x_train2,y_train)

y_pred_poly = lr.predict(x_test2)

from sklearn.metrics import mean_absolute_error,mean_absolute_percentage_error,r2_score

mean_absolute_error(y_test,y_pred_poly)

mean_absolute_percentage_error(y_test,y_pred_poly)

r2_score(y_test,y_pred_poly)